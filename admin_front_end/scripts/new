function fetchAppointmentDetails(appointmentId) {
        const appointmentDetailsUrl = `http://0.0.0.0:5000/api/v1/appointment/${appointmentId}`;
        return fetch(appointmentDetailsUrl, { headers: getAuthHeaders() })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            });
    }
    
    function fetchRelatedData(patientId, doctorId, medicationId) {
        return Promise.all([
            fetch(`http://0.0.0.0:5000/api/v1/user/${patientId}`, { headers: getAuthHeaders() }).then(response => response.json()),
            fetch(`http://0.0.0.0:5000/api/v1/doctor/${doctorId}`, { headers: getAuthHeaders() }).then(response => response.json()),
            fetch(`http://0.0.0.0:5000/api/v1/medication/${medicationId}`, { headers: getAuthHeaders() }).then(response => response.json())
        ]);
    }
    
    function updateAppointmentStatusDiv(appointmentDetails, patientData, doctorData, medicationData) {
        const appointmentStatusDiv = document.getElementById('appointment_status_div');
        
        document.getElementById('appointment_id_id').textContent = `Appointment Id: ${appointmentDetails.id}`;
        
        const medicationNameElem = document.getElementById('medication_name');
        medicationNameElem.textContent = medicationData.name || 'N/A';
        
        const appointmentQuantityElem = document.getElementById('appointment_quantity');
        appointmentQuantityElem.textContent = appointmentDetails.quantity;
        
        const appointmentPriceElem = document.getElementById('appointment_price');
        appointmentPriceElem.textContent = `$${appointmentDetails.billing_cost}`;
        
        const patientNameElem = document.getElementById('patient_name');
        patientNameElem.textContent = `${patientData.first_name} ${patientData.last_name}`;
        
        const doctorNameElem = document.getElementById('doctor_name');
        doctorNameElem.textContent = `${doctorData.first_name} ${doctorData.last_name}`;
        
        const placedAtElem = document.getElementById('placed_at');
        const formattedPlacedAt = new Date(appointmentDetails.created_at).toLocaleDateString('en-US', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
        });
        placedAtElem.textContent = formattedPlacedAt;
        
        const updatedAtElem = document.getElementById('updated_at');
        const formattedUpdatedAt = new Date(appointmentDetails.updated_at).toLocaleDateString('en-US', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
        });
        updatedAtElem.textContent = formattedUpdatedAt;
        
        const appointmentStatus = document.getElementById('option_select_1');
        const appointmentSelect = document.getElementById('appointment_select');
        appointmentStatus.textContent = appointmentDetails.appointment_status;

        const status = appointmentDetails.appointment_status.trim().toLowerCase(); 
        if (status === 'pending approval') {
            appointmentSelect.style.backgroundColor = '#00B300'; 
        } else if (status === 'approved') {
            appointmentSelect.style.backgroundColor = '#00B300';
        } else {
            appointmentSelect.style.backgroundColor = '#FFBABA';
        }
        
    }
    
    function showAppointmentStatusDiv() {
        const appointmentStatusDiv = document.getElementById('appointment_status_div');
        const computedStyle = window.getComputedStyle(appointmentStatusDiv);
        if (computedStyle.display === "none") {
            appointmentStatusDiv.style.display = 'block';
            if(appointmentStatusDiv.style.display = 'block'){
                appointmentStatusDiv.style.zIndex = "200";
                showOverlay();
            }
        }
    }

    function hideAppointmentStatusDiv() {
        const appointmentStatusDiv = document.getElementById('appointment_status_div');
        const appointmentSelect = document.getElementById('appointment_select');
        const computedStyle = window.getComputedStyle(appointmentStatusDiv);
        if (computedStyle.display === "block") {
            appointmentStatusDiv.style.display = 'none';
            appointmentSelect.selectedIndex = 0;
        }
    }
    function hideOverlay() {
        const overlayDiv = document.getElementById('overlay');
        const computedStyle = window.getComputedStyle(overlayDiv);
      
        if (computedStyle.display === 'block') {
          overlayDiv.style.display = 'none';
        }
      }

    function showOverlay() {
        const overlayDiv = document.getElementById('overlay');
        const computedStyle = window.getComputedStyle(overlayDiv);
      
        if (computedStyle.display === 'none') {
          overlayDiv.style.display = 'block';
          overlayDiv.style.backgroundColor = "rgba(0, 0, 0, 0.1)";
        }
      }

    const myButton = document.getElementById('appointment_exit_div');
            myButton.addEventListener('click', () => {
                hideAppointmentStatusDiv();
                hideOverlay();
            });
    
    tableBody.addEventListener('click', (event) => {
        if (event.target.tagName !== 'TD') return;
        const clickedRow = event.target.closest('tr');
        if (!clickedRow) return;
        appointmentId = clickedRow.cells[1].textContent;

        
        fetchAppointmentDetails(appointmentId)
            .then(appointmentDetails => {
                const patientId = appointmentDetails.user_id;
                const doctorId = appointmentDetails.doctor_id;
                const medicationId = appointmentDetails.medication_id;
    
                return fetchRelatedData(patientId, doctorId, medicationId).then(([patientData, doctorData, medicationData]) => {
                    updateAppointmentStatusDiv(appointmentDetails, patientData, doctorData, medicationData);
                    showAppointmentStatusDiv();
                });
            })
            .catch(error => {
                console.error("Error fetching appointment details or related data:", error);
            });
    });

    function updateAppointment() {
        if (!appointmentId) {
        alert("Appointment ID is not available. Please select an appointment first.");
        return;
        }

        const selectedOption1 = document.getElementById('option_select_2').value;
        const selectedOption2 = document.getElementById('option_select_3').value;
        let selectedOption;

        console.log(selectedOption);
        
        if (selectedOption === "") {
            alert("Please select a valid appointment status.");
            return;
        }

        if(selectedOption1 === "Approved") {
            selectedOption = selectedOption1;
        } else if(selectedOption2 === "Cancelled"){
            selectedOption = selectedOption2;
        } else{
            alert("Please select a valid appointment status");
            return;
        }

        
        const appointmentData = {
            appointment_status: selectedOption,
        };
        
        
        const jsonData = JSON.stringify(appointmentData);

        console.log(appointmentData);
        
    
        const request = new Request(`http://0.0.0.0:5000/api/v1/appointment/${appointmentId}`, {
        method: "PUT",
        headers: {
            "Content-Type": "application/json",
            ...getAuthHeaders()
        },
        body: jsonData,
        });
        
        fetch(request)
        .then(response => {
            if (response.ok) {
                showFeedbackDiv();
                return response.json();
            } else {
                throw new Error(`Error updating appointment: ${response.statusText}`);
            }
        })
        .then(jsonData => {
            showFeedbackDiv();
            console.log(jsonData);
            const confirmationTextDiv = document.getElementById('saved_confirmation_text_text');
            const message = jsonData[0].Message;
            console.log(message);
            confirmationTextDiv.textContent = message;
        })
        .catch(error => alert(error));
    }

    const updateButton = document.getElementById('update_button');
    updateButton.addEventListener('click', () => {
        hideAppointmentStatusDiv();
        updateAppointment();
    });

    function showFeedbackDiv() {
        const feedbackDiv = document.getElementById("returned_info");
        feedbackDiv.style.display = "block";
        feedbackDiv.style.zIndex = "200";
    }
    function hideFeedbackDiv() {
        const feedbackDiv = document.getElementById("returned_info");
        feedbackDiv.style.display = "none";
        window.location.reload();
      }

    const okButton = document.getElementById('ok_button');
    okButton.addEventListener('click', () => {
        hideFeedbackDiv();
    });